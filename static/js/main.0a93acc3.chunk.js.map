{"version":3,"sources":["store/todos/todos-const.js","store/root-reducer.js","store/todos/todos-reducer.js","components/TodoList.jsx","store/todos/todos-selectors.js","store/todos/todos-actions.js","components/NewTodo.jsx","components/Filters.jsx","App.jsx","Root.jsx","index.js","store/index.js","store/local-storage.js"],"names":["ADD_TODO","REMOVE_TODO","TOGGLE_TODO","rootReducer","combineReducers","todos","state","action","type","id","Date","now","title","completed","filter","todo","todoId","map","TodoList","dispatch","useDispatch","activeFilter","useParams","useSelector","selectFilteredTodo","checked","onChange","onClick","NewTodo","onSubmit","e","preventDefault","form","target","value","reset","name","placeholder","Filters","style","marginTop","display","gap","justifyContent","to","color","App","className","Root","store","path","element","persistState","savedState","localStorage","getItem","JSON","parse","error","loadState","createStore","devToolsEnhancer","subscribe","throttle","stateToBeSaved","stringify","setItem","console","log","saveState","getState","configureStore","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.0a93acc3.chunk.js","sourcesContent":["export const ADD_TODO = \"ADD_TODO\";\nexport const REMOVE_TODO = \"REMOVE_TODO\";\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\n","import { combineReducers } from 'redux';\n\nimport { todos } from './todos/todos-reducer';\n// import { filters } from './filters/filters-reducers';\n\nexport const rootReducer = combineReducers({ todos /* , filters */ });\n","import { ADD_TODO, REMOVE_TODO, TOGGLE_TODO } from './todos-const';\n\nexport const todos = (state = [], action) => {\n  switch (action.type) {\n    case ADD_TODO: {\n      return [\n        ...state,\n        {\n          id: Date.now(),\n          title: action.title,\n          completed: false,\n        },\n      ];\n    }\n    case REMOVE_TODO: {\n      return state.filter((todo) => todo.id !== action.todoId);\n    }\n    case TOGGLE_TODO: {\n      return state.map((todo) =>\n        todo.id === action.todoId\n          ? {\n              ...todo,\n              completed: !todo.completed,\n            }\n          : todo\n      );\n    }\n    default:\n      return state;\n  }\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectFilteredTodo } from '../store/todos/todos-selectors';\nimport { removeTodo, toggleTodo } from '../store/todos/todos-actions';\n// import { selectActiveFilters } from '../store/filters/filters-selectors';\nimport { useParams } from 'react-router-dom';\n\nexport const TodoList = () => {\n  const dispatch = useDispatch();\n  // const activeFilter = useSelector(selectActiveFilters);\n  const { filter: activeFilter } = useParams();\n  const todos = useSelector((state) => selectFilteredTodo(state, activeFilter));\n\n  return (\n    <ul>\n      {todos.map((todo) => (\n        <li key={todo.id}>\n          <input\n            type='checkbox'\n            checked={todo.completed}\n            onChange={() => dispatch(toggleTodo(todo.id))}\n          />{' '}\n          {todo.title}{' '}\n          <button type='button' onClick={() => dispatch(removeTodo(todo.id))}>\n            X\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","export const selectAllTodos = (state) => state.todos;\n\nexport const selectCompletedTodos = (state) =>\n  state.todos.filter((todo) => todo.completed === false);\n\nexport const selectFilteredTodo = (state, filter) => {\n  switch (filter) {\n    case 'active':\n      return state.todos.filter((todo) => !todo.completed);\n    case 'completed':\n      return state.todos.filter((todo) => todo.completed);\n    case 'all':\n    default:\n      return state.todos;\n  }\n};\n","import { ADD_TODO, REMOVE_TODO, TOGGLE_TODO } from './todos-const';\n\nexport const addTodo = (title) => ({\n  type: ADD_TODO,\n  title,\n});\n\nexport const removeTodo = (todoId) => ({\n  type: REMOVE_TODO,\n  todoId,\n});\n\nexport const toggleTodo = (todoId) => ({\n  type: TOGGLE_TODO,\n  todoId,\n});\n","import { useDispatch } from 'react-redux';\nimport { addTodo } from '../store/todos/todos-actions';\n\nexport const NewTodo = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const form = e.target;\n    dispatch(addTodo(form.title.value));\n    e.target.reset();\n  };\n\n  return (\n    <>\n      <h1>Add todo </h1>\n      <form onSubmit={handleSubmit}>\n        <input type='text' name='title' placeholder='New todo' />\n        <button type='submit'>Add item</button>\n      </form>\n    </>\n  );\n};\n","// import { useSelector, useDispatch } from 'react-redux';\nimport { useParams, Link } from 'react-router-dom';\n// import { filters } from '../store/filters/filters-actions';\n// import { selectActiveFilters } from '../store/filters/filters-selectors';\n\nexport const Filters = () => {\n  // const activeFilter = useSelector(selectActiveFilters);\n  // const dispatch = useDispatch();\n  const { filter: activeFilter = 'all' } = useParams();\n\n  return (\n    <div\n      style={{\n        marginTop: 10,\n        display: 'flex',\n        gap: 10,\n        justifyContent: 'center',\n      }}\n    >\n      <Link\n        // onClick={() => dispatch(filters('all'))}\n        to='all'\n        style={{ color: activeFilter === 'all' ? 'red' : null }}\n        name='button'\n      >\n        all\n      </Link>\n      <Link\n        // onClick={() => dispatch(filters('active'))}\n        to='active'\n        style={{ color: activeFilter === 'active' ? 'red' : null }}\n        type='button'\n      >\n        active\n      </Link>\n      <Link\n        // onClick={() => dispatch(filters('completed'))}\n        to='completed'\n        style={{ color: activeFilter === 'completed' ? 'red' : null }}\n        type='button'\n      >\n        completed\n      </Link>\n    </div>\n  );\n};\n","import './styles.css';\n\nimport { TodoList } from './components/TodoList';\nimport { NewTodo } from './components/NewTodo';\nimport { Filters } from './components/Filters';\n\nexport default function App() {\n  return (\n    <div className='App'>\n      <NewTodo />\n      <Filters />\n      <TodoList />\n    </div>\n  );\n}\n","import { Provider } from 'react-redux';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport App from './App';\n\nexport const Root = ({ store }) => (\n  <Provider store={store}>\n    <BrowserRouter>\n      <Routes>\n        <Route path='/' element={<App />}>\n          <Route path=':filter' element={<App />} />\n        </Route>\n      </Routes>\n    </BrowserRouter>\n  </Provider>\n);\n","// import { StrictMode } from \"react\";\nimport { createRoot } from 'react-dom/client';\n\nimport { configureStore } from './store/index';\n\nimport { Root } from './Root';\n\nconst store = configureStore();\n\nconst rootElement = document.getElementById('root');\nconst root = createRoot(rootElement);\n\nroot.render(\n  // <StrictMode>\n  <Root store={store} />\n  // </StrictMode>\n);\n","import { createStore } from 'redux';\nimport { devToolsEnhancer } from '@redux-devtools/extension';\nimport { rootReducer } from './root-reducer';\nimport { loadState, saveState } from './local-storage';\nimport throttle from 'lodash/throttle';\n\n// export const store = createStore(rootReducer, devToolsEnhancer());\n\nexport const configureStore = () => {\n  const persistState = loadState();\n  const store = createStore(rootReducer, persistState, devToolsEnhancer());\n\n  store.subscribe(\n    throttle(() => {\n      saveState({\n        todos: store.getState().todos,\n      });\n    }, 1000)\n  );\n\n  return store;\n};\n","export const loadState = () => {\n  try {\n    const savedState = localStorage.getItem('state');\n    if (savedState === null) {\n      return undefined;\n    }\n\n    return JSON.parse(savedState);\n  } catch (error) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state) => {\n  try {\n    const stateToBeSaved = JSON.stringify(state);\n\n    localStorage.setItem('state', stateToBeSaved);\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"sourceRoot":""}